
stm32f4xx_driver_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000800  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000998  080009a0  000109a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000998  08000998  000109a0  2**0
                  CONTENTS
  4 .ARM          00000000  08000998  08000998  000109a0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000998  080009a0  000109a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000998  08000998  00010998  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800099c  0800099c  0001099c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080009a0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080009a0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000109a0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a8f  00000000  00000000  000109d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002a9  00000000  00000000  0001145f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00011708  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  000117d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001f73  00000000  00000000  00011870  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001096  00000000  00000000  000137e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008b2e  00000000  00000000  00014879  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001d3a7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001d3f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000980 	.word	0x08000980

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000980 	.word	0x08000980

080001d8 <delay>:

#include "stm32f411xx.h"


void delay()
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	for(uint32_t i=0 ; i < 50000/2 ;i++);
 80001de:	2300      	movs	r3, #0
 80001e0:	607b      	str	r3, [r7, #4]
 80001e2:	e002      	b.n	80001ea <delay+0x12>
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	3301      	adds	r3, #1
 80001e8:	607b      	str	r3, [r7, #4]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	f246 12a7 	movw	r2, #24999	; 0x61a7
 80001f0:	4293      	cmp	r3, r2
 80001f2:	d9f7      	bls.n	80001e4 <delay+0xc>
}
 80001f4:	bf00      	nop
 80001f6:	bf00      	nop
 80001f8:	370c      	adds	r7, #12
 80001fa:	46bd      	mov	sp, r7
 80001fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000200:	4770      	bx	lr
	...

08000204 <main>:
void main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t button,led;

	// Clear value 0
	memset(&button,0,sizeof(button));
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 fbac 	bl	8000970 <memset>
	memset(&led,0,sizeof(led));
 8000218:	463b      	mov	r3, r7
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 fba6 	bl	8000970 <memset>

	// Khai báo button PD5
	button.pGPIOx = GPIOD;
 8000224:	4b14      	ldr	r3, [pc, #80]	; (8000278 <main+0x74>)
 8000226:	60fb      	str	r3, [r7, #12]
	button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_5;
 8000228:	2305      	movs	r3, #5
 800022a:	743b      	strb	r3, [r7, #16]
	button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN_FT;
 800022c:	2305      	movs	r3, #5
 800022e:	747b      	strb	r3, [r7, #17]
	button.GPIO_PinConfig.GPIO_PinPUPD = GPIO_PU;
 8000230:	2301      	movs	r3, #1
 8000232:	753b      	strb	r3, [r7, #20]

	GPIO_Init(&button);
 8000234:	f107 030c 	add.w	r3, r7, #12
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f901 	bl	8000440 <GPIO_Init>
	// Khai báo led PD14
	led.pGPIOx = GPIOD;
 800023e:	4b0e      	ldr	r3, [pc, #56]	; (8000278 <main+0x74>)
 8000240:	603b      	str	r3, [r7, #0]
	led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
 8000242:	230c      	movs	r3, #12
 8000244:	713b      	strb	r3, [r7, #4]
	led.GPIO_PinConfig.GPIO_PinMode =  GPIO_MODE_OUT;
 8000246:	2301      	movs	r3, #1
 8000248:	717b      	strb	r3, [r7, #5]
	led.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OUT_SPEED_MED;
 800024a:	2301      	movs	r3, #1
 800024c:	71bb      	strb	r3, [r7, #6]
	led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPT_PP;
 800024e:	2300      	movs	r3, #0
 8000250:	71fb      	strb	r3, [r7, #7]
	led.GPIO_PinConfig.GPIO_PinPUPD = GPIO_NO_PUPD;
 8000252:	2300      	movs	r3, #0
 8000254:	723b      	strb	r3, [r7, #8]

	GPIO_Init(&led);
 8000256:	463b      	mov	r3, r7
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f8f1 	bl	8000440 <GPIO_Init>

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800025e:	2101      	movs	r1, #1
 8000260:	4805      	ldr	r0, [pc, #20]	; (8000278 <main+0x74>)
 8000262:	f000 f845 	bl	80002f0 <GPIO_PeriClockControl>

	// Config IRQ
	GPIO_IRQConfigNumber(IRQ_NO_EXTI9_5, ENABLE);
 8000266:	2101      	movs	r1, #1
 8000268:	2017      	movs	r0, #23
 800026a:	f000 fa89 	bl	8000780 <GPIO_IRQConfigNumber>

	GPIO_IRQConfigPriority(IRQ_NO_EXTI9_5, NVIC_IRQ_PRIO_15);
 800026e:	210f      	movs	r1, #15
 8000270:	2017      	movs	r0, #23
 8000272:	f000 fb0b 	bl	800088c <GPIO_IRQConfigPriority>

	while(1);
 8000276:	e7fe      	b.n	8000276 <main+0x72>
 8000278:	40020c00 	.word	0x40020c00

0800027c <EXTI9_5_IRQHandler>:
}

void EXTI9_5_IRQHandler()
{
 800027c:	b580      	push	{r7, lr}
 800027e:	af00      	add	r7, sp, #0
	delay();
 8000280:	f7ff ffaa 	bl	80001d8 <delay>
	// Clear the Pending interrupt from the EXTI Line
	GPIO_IRQHandling(GPIO_PIN_5);
 8000284:	2005      	movs	r0, #5
 8000286:	f000 fb2f 	bl	80008e8 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_12);
 800028a:	210c      	movs	r1, #12
 800028c:	4802      	ldr	r0, [pc, #8]	; (8000298 <EXTI9_5_IRQHandler+0x1c>)
 800028e:	f000 fa61 	bl	8000754 <GPIO_ToggleOutputPin>
}
 8000292:	bf00      	nop
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	40020c00 	.word	0x40020c00

0800029c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800029c:	480d      	ldr	r0, [pc, #52]	; (80002d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a4:	480c      	ldr	r0, [pc, #48]	; (80002d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a6:	490d      	ldr	r1, [pc, #52]	; (80002dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a8:	4a0d      	ldr	r2, [pc, #52]	; (80002e0 <LoopForever+0xe>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ac:	e002      	b.n	80002b4 <LoopCopyDataInit>

080002ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b2:	3304      	adds	r3, #4

080002b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b8:	d3f9      	bcc.n	80002ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ba:	4a0a      	ldr	r2, [pc, #40]	; (80002e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002bc:	4c0a      	ldr	r4, [pc, #40]	; (80002e8 <LoopForever+0x16>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c0:	e001      	b.n	80002c6 <LoopFillZerobss>

080002c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c4:	3204      	adds	r2, #4

080002c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c8:	d3fb      	bcc.n	80002c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ca:	f000 fb2d 	bl	8000928 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ce:	f7ff ff99 	bl	8000204 <main>

080002d2 <LoopForever>:

LoopForever:
    b LoopForever
 80002d2:	e7fe      	b.n	80002d2 <LoopForever>
  ldr   r0, =_estack
 80002d4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e0:	080009a0 	.word	0x080009a0
  ldr r2, =_sbss
 80002e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e8:	2000001c 	.word	0x2000001c

080002ec <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002ec:	e7fe      	b.n	80002ec <ADC_IRQHandler>
	...

080002f0 <GPIO_PeriClockControl>:
 *  @return				-  none
 *
 *  @note				-  none
 */
void GPIO_PeriClockControl(	GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002f0:	b480      	push	{r7}
 80002f2:	b083      	sub	sp, #12
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
 80002f8:	460b      	mov	r3, r1
 80002fa:	70fb      	strb	r3, [r7, #3]
	switch(EnorDi)
 80002fc:	78fb      	ldrb	r3, [r7, #3]
 80002fe:	2b00      	cmp	r3, #0
 8000300:	d044      	beq.n	800038c <GPIO_PeriClockControl+0x9c>
 8000302:	2b01      	cmp	r3, #1
 8000304:	f040 8087 	bne.w	8000416 <GPIO_PeriClockControl+0x126>
	{
		case ENABLE:
			if(pGPIOx == GPIOA)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a46      	ldr	r2, [pc, #280]	; (8000424 <GPIO_PeriClockControl+0x134>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x2e>
				GPIOA_PCLK_EN();
 8000310:	4b45      	ldr	r3, [pc, #276]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a44      	ldr	r2, [pc, #272]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000316:	f043 0301 	orr.w	r3, r3, #1
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
				GPIOD_PCLK_EN();
			else if (pGPIOx == GPIOE)
				GPIOE_PCLK_EN();
			else if (pGPIOx == GPIOH)
				GPIOH_PCLK_EN();
			break;
 800031c:	e078      	b.n	8000410 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOB)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a42      	ldr	r2, [pc, #264]	; (800042c <GPIO_PeriClockControl+0x13c>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x44>
				GPIOB_PCLK_EN();
 8000326:	4b40      	ldr	r3, [pc, #256]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a3f      	ldr	r2, [pc, #252]	; (8000428 <GPIO_PeriClockControl+0x138>)
 800032c:	f043 0302 	orr.w	r3, r3, #2
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000332:	e06d      	b.n	8000410 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOC)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a3e      	ldr	r2, [pc, #248]	; (8000430 <GPIO_PeriClockControl+0x140>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0x5a>
				GPIOC_PCLK_EN();
 800033c:	4b3a      	ldr	r3, [pc, #232]	; (8000428 <GPIO_PeriClockControl+0x138>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a39      	ldr	r2, [pc, #228]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000342:	f043 0304 	orr.w	r3, r3, #4
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000348:	e062      	b.n	8000410 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOD)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a39      	ldr	r2, [pc, #228]	; (8000434 <GPIO_PeriClockControl+0x144>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x70>
				GPIOD_PCLK_EN();
 8000352:	4b35      	ldr	r3, [pc, #212]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a34      	ldr	r2, [pc, #208]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000358:	f043 0308 	orr.w	r3, r3, #8
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 800035e:	e057      	b.n	8000410 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOE)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a35      	ldr	r2, [pc, #212]	; (8000438 <GPIO_PeriClockControl+0x148>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0x86>
				GPIOE_PCLK_EN();
 8000368:	4b2f      	ldr	r3, [pc, #188]	; (8000428 <GPIO_PeriClockControl+0x138>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a2e      	ldr	r2, [pc, #184]	; (8000428 <GPIO_PeriClockControl+0x138>)
 800036e:	f043 0310 	orr.w	r3, r3, #16
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000374:	e04c      	b.n	8000410 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOH)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a30      	ldr	r2, [pc, #192]	; (800043c <GPIO_PeriClockControl+0x14c>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d148      	bne.n	8000410 <GPIO_PeriClockControl+0x120>
				GPIOH_PCLK_EN();
 800037e:	4b2a      	ldr	r3, [pc, #168]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a29      	ldr	r2, [pc, #164]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000384:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 800038a:	e041      	b.n	8000410 <GPIO_PeriClockControl+0x120>
		case DISABLE:
			if(pGPIOx == GPIOA)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a25      	ldr	r2, [pc, #148]	; (8000424 <GPIO_PeriClockControl+0x134>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0xb2>
				GPIOA_PCLK_DI();
 8000394:	4b24      	ldr	r3, [pc, #144]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a23      	ldr	r2, [pc, #140]	; (8000428 <GPIO_PeriClockControl+0x138>)
 800039a:	f023 0301 	bic.w	r3, r3, #1
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
				GPIOD_PCLK_DI();
			else if (pGPIOx == GPIOE)
				GPIOE_PCLK_DI();
			else if (pGPIOx == GPIOH)
				GPIOH_PCLK_DI();
			break;
 80003a0:	e038      	b.n	8000414 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOB)
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a21      	ldr	r2, [pc, #132]	; (800042c <GPIO_PeriClockControl+0x13c>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0xc8>
				GPIOB_PCLK_DI();
 80003aa:	4b1f      	ldr	r3, [pc, #124]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a1e      	ldr	r2, [pc, #120]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003b0:	f023 0302 	bic.w	r3, r3, #2
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003b6:	e02d      	b.n	8000414 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOC)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a1d      	ldr	r2, [pc, #116]	; (8000430 <GPIO_PeriClockControl+0x140>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0xde>
				GPIOC_PCLK_DI();
 80003c0:	4b19      	ldr	r3, [pc, #100]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c4:	4a18      	ldr	r2, [pc, #96]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003c6:	f023 0304 	bic.w	r3, r3, #4
 80003ca:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003cc:	e022      	b.n	8000414 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOD)
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a18      	ldr	r2, [pc, #96]	; (8000434 <GPIO_PeriClockControl+0x144>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0xf4>
				GPIOD_PCLK_DI();
 80003d6:	4b14      	ldr	r3, [pc, #80]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003da:	4a13      	ldr	r2, [pc, #76]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003dc:	f023 0308 	bic.w	r3, r3, #8
 80003e0:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003e2:	e017      	b.n	8000414 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOE)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a14      	ldr	r2, [pc, #80]	; (8000438 <GPIO_PeriClockControl+0x148>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0x10a>
				GPIOE_PCLK_DI();
 80003ec:	4b0e      	ldr	r3, [pc, #56]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f0:	4a0d      	ldr	r2, [pc, #52]	; (8000428 <GPIO_PeriClockControl+0x138>)
 80003f2:	f023 0310 	bic.w	r3, r3, #16
 80003f6:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003f8:	e00c      	b.n	8000414 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOH)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a0f      	ldr	r2, [pc, #60]	; (800043c <GPIO_PeriClockControl+0x14c>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d108      	bne.n	8000414 <GPIO_PeriClockControl+0x124>
				GPIOH_PCLK_DI();
 8000402:	4b09      	ldr	r3, [pc, #36]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000406:	4a08      	ldr	r2, [pc, #32]	; (8000428 <GPIO_PeriClockControl+0x138>)
 8000408:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800040c:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 800040e:	e001      	b.n	8000414 <GPIO_PeriClockControl+0x124>
			break;
 8000410:	bf00      	nop
 8000412:	e000      	b.n	8000416 <GPIO_PeriClockControl+0x126>
			break;
 8000414:	bf00      	nop
	}

}
 8000416:	bf00      	nop
 8000418:	370c      	adds	r7, #12
 800041a:	46bd      	mov	sp, r7
 800041c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000420:	4770      	bx	lr
 8000422:	bf00      	nop
 8000424:	40020000 	.word	0x40020000
 8000428:	40023800 	.word	0x40023800
 800042c:	40020400 	.word	0x40020400
 8000430:	40020800 	.word	0x40020800
 8000434:	40020c00 	.word	0x40020c00
 8000438:	40021000 	.word	0x40021000
 800043c:	40021c00 	.word	0x40021c00

08000440 <GPIO_Init>:
/*
 * GPIO Init and DeInit Pin
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000440:	b480      	push	{r7}
 8000442:	b087      	sub	sp, #28
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000448:	2300      	movs	r3, #0
 800044a:	617b      	str	r3, [r7, #20]
	/*
	 * Config the pinMode
	 *   + Chia ra Nomal Mode
	 *   + Interrupt Mode
	 */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	795b      	ldrb	r3, [r3, #5]
 8000450:	2b03      	cmp	r3, #3
 8000452:	d820      	bhi.n	8000496 <GPIO_Init+0x56>
	{
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	795b      	ldrb	r3, [r3, #5]
 8000458:	461a      	mov	r2, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	791b      	ldrb	r3, [r3, #4]
 800045e:	005b      	lsls	r3, r3, #1
 8000460:	fa02 f303 	lsl.w	r3, r2, r3
 8000464:	617b      	str	r3, [r7, #20]
		// Clearbit trước khi Set
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	681a      	ldr	r2, [r3, #0]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	005b      	lsls	r3, r3, #1
 8000472:	2103      	movs	r1, #3
 8000474:	fa01 f303 	lsl.w	r3, r1, r3
 8000478:	43db      	mvns	r3, r3
 800047a:	4619      	mov	r1, r3
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	400a      	ands	r2, r1
 8000482:	601a      	str	r2, [r3, #0]
		// Setbit
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	6819      	ldr	r1, [r3, #0]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	697a      	ldr	r2, [r7, #20]
 8000490:	430a      	orrs	r2, r1
 8000492:	601a      	str	r2, [r3, #0]
 8000494:	e0b6      	b.n	8000604 <GPIO_Init+0x1c4>
	}
	else
	{
		//1. Cấu hình RT, FT trong EXTI
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_FT)
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	795b      	ldrb	r3, [r3, #5]
 800049a:	2b05      	cmp	r3, #5
 800049c:	d117      	bne.n	80004ce <GPIO_Init+0x8e>
		{
			EXTI->FTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800049e:	4b40      	ldr	r3, [pc, #256]	; (80005a0 <GPIO_Init+0x160>)
 80004a0:	68db      	ldr	r3, [r3, #12]
 80004a2:	687a      	ldr	r2, [r7, #4]
 80004a4:	7912      	ldrb	r2, [r2, #4]
 80004a6:	4611      	mov	r1, r2
 80004a8:	2201      	movs	r2, #1
 80004aa:	408a      	lsls	r2, r1
 80004ac:	4611      	mov	r1, r2
 80004ae:	4a3c      	ldr	r2, [pc, #240]	; (80005a0 <GPIO_Init+0x160>)
 80004b0:	430b      	orrs	r3, r1
 80004b2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b4:	4b3a      	ldr	r3, [pc, #232]	; (80005a0 <GPIO_Init+0x160>)
 80004b6:	689b      	ldr	r3, [r3, #8]
 80004b8:	687a      	ldr	r2, [r7, #4]
 80004ba:	7912      	ldrb	r2, [r2, #4]
 80004bc:	4611      	mov	r1, r2
 80004be:	2201      	movs	r2, #1
 80004c0:	408a      	lsls	r2, r1
 80004c2:	43d2      	mvns	r2, r2
 80004c4:	4611      	mov	r1, r2
 80004c6:	4a36      	ldr	r2, [pc, #216]	; (80005a0 <GPIO_Init+0x160>)
 80004c8:	400b      	ands	r3, r1
 80004ca:	6093      	str	r3, [r2, #8]
 80004cc:	e035      	b.n	800053a <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_RT)
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	795b      	ldrb	r3, [r3, #5]
 80004d2:	2b04      	cmp	r3, #4
 80004d4:	d117      	bne.n	8000506 <GPIO_Init+0xc6>
		{
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d6:	4b32      	ldr	r3, [pc, #200]	; (80005a0 <GPIO_Init+0x160>)
 80004d8:	68db      	ldr	r3, [r3, #12]
 80004da:	687a      	ldr	r2, [r7, #4]
 80004dc:	7912      	ldrb	r2, [r2, #4]
 80004de:	4611      	mov	r1, r2
 80004e0:	2201      	movs	r2, #1
 80004e2:	408a      	lsls	r2, r1
 80004e4:	43d2      	mvns	r2, r2
 80004e6:	4611      	mov	r1, r2
 80004e8:	4a2d      	ldr	r2, [pc, #180]	; (80005a0 <GPIO_Init+0x160>)
 80004ea:	400b      	ands	r3, r1
 80004ec:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ee:	4b2c      	ldr	r3, [pc, #176]	; (80005a0 <GPIO_Init+0x160>)
 80004f0:	689b      	ldr	r3, [r3, #8]
 80004f2:	687a      	ldr	r2, [r7, #4]
 80004f4:	7912      	ldrb	r2, [r2, #4]
 80004f6:	4611      	mov	r1, r2
 80004f8:	2201      	movs	r2, #1
 80004fa:	408a      	lsls	r2, r1
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a28      	ldr	r2, [pc, #160]	; (80005a0 <GPIO_Init+0x160>)
 8000500:	430b      	orrs	r3, r1
 8000502:	6093      	str	r3, [r2, #8]
 8000504:	e019      	b.n	800053a <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_RFT)
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	795b      	ldrb	r3, [r3, #5]
 800050a:	2b06      	cmp	r3, #6
 800050c:	d115      	bne.n	800053a <GPIO_Init+0xfa>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050e:	4b24      	ldr	r3, [pc, #144]	; (80005a0 <GPIO_Init+0x160>)
 8000510:	68db      	ldr	r3, [r3, #12]
 8000512:	687a      	ldr	r2, [r7, #4]
 8000514:	7912      	ldrb	r2, [r2, #4]
 8000516:	4611      	mov	r1, r2
 8000518:	2201      	movs	r2, #1
 800051a:	408a      	lsls	r2, r1
 800051c:	4611      	mov	r1, r2
 800051e:	4a20      	ldr	r2, [pc, #128]	; (80005a0 <GPIO_Init+0x160>)
 8000520:	430b      	orrs	r3, r1
 8000522:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000524:	4b1e      	ldr	r3, [pc, #120]	; (80005a0 <GPIO_Init+0x160>)
 8000526:	689b      	ldr	r3, [r3, #8]
 8000528:	687a      	ldr	r2, [r7, #4]
 800052a:	7912      	ldrb	r2, [r2, #4]
 800052c:	4611      	mov	r1, r2
 800052e:	2201      	movs	r2, #1
 8000530:	408a      	lsls	r2, r1
 8000532:	4611      	mov	r1, r2
 8000534:	4a1a      	ldr	r2, [pc, #104]	; (80005a0 <GPIO_Init+0x160>)
 8000536:	430b      	orrs	r3, r1
 8000538:	6093      	str	r3, [r2, #8]
		}

		//2. Cấu hình port tương ứng đã chọn trong SYSCFG_EXTICR, mặc định là portA
		// đầu tiên phải xem Pin đó ứng với EXTICR nào, sau đó xem nó vào ô nào trong EXTICR đó

		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	791b      	ldrb	r3, [r3, #4]
 800053e:	089b      	lsrs	r3, r3, #2
 8000540:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	f003 0303 	and.w	r3, r3, #3
 800054a:	74bb      	strb	r3, [r7, #18]
		uint8_t portCode = GPIO_PORTCODE(pGPIOHandle->pGPIOx);
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a14      	ldr	r2, [pc, #80]	; (80005a4 <GPIO_Init+0x164>)
 8000552:	4293      	cmp	r3, r2
 8000554:	d032      	beq.n	80005bc <GPIO_Init+0x17c>
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	4a13      	ldr	r2, [pc, #76]	; (80005a8 <GPIO_Init+0x168>)
 800055c:	4293      	cmp	r3, r2
 800055e:	d01d      	beq.n	800059c <GPIO_Init+0x15c>
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	4a11      	ldr	r2, [pc, #68]	; (80005ac <GPIO_Init+0x16c>)
 8000566:	4293      	cmp	r3, r2
 8000568:	d016      	beq.n	8000598 <GPIO_Init+0x158>
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	4a10      	ldr	r2, [pc, #64]	; (80005b0 <GPIO_Init+0x170>)
 8000570:	4293      	cmp	r3, r2
 8000572:	d00f      	beq.n	8000594 <GPIO_Init+0x154>
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	4a0e      	ldr	r2, [pc, #56]	; (80005b4 <GPIO_Init+0x174>)
 800057a:	4293      	cmp	r3, r2
 800057c:	d008      	beq.n	8000590 <GPIO_Init+0x150>
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	4a0d      	ldr	r2, [pc, #52]	; (80005b8 <GPIO_Init+0x178>)
 8000584:	4293      	cmp	r3, r2
 8000586:	d101      	bne.n	800058c <GPIO_Init+0x14c>
 8000588:	2307      	movs	r3, #7
 800058a:	e018      	b.n	80005be <GPIO_Init+0x17e>
 800058c:	2300      	movs	r3, #0
 800058e:	e016      	b.n	80005be <GPIO_Init+0x17e>
 8000590:	2304      	movs	r3, #4
 8000592:	e014      	b.n	80005be <GPIO_Init+0x17e>
 8000594:	2303      	movs	r3, #3
 8000596:	e012      	b.n	80005be <GPIO_Init+0x17e>
 8000598:	2302      	movs	r3, #2
 800059a:	e010      	b.n	80005be <GPIO_Init+0x17e>
 800059c:	2301      	movs	r3, #1
 800059e:	e00e      	b.n	80005be <GPIO_Init+0x17e>
 80005a0:	40013c00 	.word	0x40013c00
 80005a4:	40020000 	.word	0x40020000
 80005a8:	40020400 	.word	0x40020400
 80005ac:	40020800 	.word	0x40020800
 80005b0:	40020c00 	.word	0x40020c00
 80005b4:	40021000 	.word	0x40021000
 80005b8:	40021c00 	.word	0x40021c00
 80005bc:	2300      	movs	r3, #0
 80005be:	747b      	strb	r3, [r7, #17]
		// Enable SYS Clock
		SYSCFG_PCLK_EN();
 80005c0:	4b61      	ldr	r3, [pc, #388]	; (8000748 <GPIO_Init+0x308>)
 80005c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005c4:	4a60      	ldr	r2, [pc, #384]	; (8000748 <GPIO_Init+0x308>)
 80005c6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005ca:	6453      	str	r3, [r2, #68]	; 0x44
		// Chon PORT cho EXTI line
		SYSCFG->EXTICR[temp1] |= portCode << (4 * temp2);
 80005cc:	4a5f      	ldr	r2, [pc, #380]	; (800074c <GPIO_Init+0x30c>)
 80005ce:	7cfb      	ldrb	r3, [r7, #19]
 80005d0:	3302      	adds	r3, #2
 80005d2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005d6:	7c79      	ldrb	r1, [r7, #17]
 80005d8:	7cbb      	ldrb	r3, [r7, #18]
 80005da:	009b      	lsls	r3, r3, #2
 80005dc:	fa01 f303 	lsl.w	r3, r1, r3
 80005e0:	4618      	mov	r0, r3
 80005e2:	495a      	ldr	r1, [pc, #360]	; (800074c <GPIO_Init+0x30c>)
 80005e4:	7cfb      	ldrb	r3, [r7, #19]
 80005e6:	4302      	orrs	r2, r0
 80005e8:	3302      	adds	r3, #2
 80005ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3. Enable interrupt trong thanh ghi Interrupt mask register (EXTI_IMR)
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005ee:	4b58      	ldr	r3, [pc, #352]	; (8000750 <GPIO_Init+0x310>)
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	687a      	ldr	r2, [r7, #4]
 80005f4:	7912      	ldrb	r2, [r2, #4]
 80005f6:	4611      	mov	r1, r2
 80005f8:	2201      	movs	r2, #1
 80005fa:	408a      	lsls	r2, r1
 80005fc:	4611      	mov	r1, r2
 80005fe:	4a54      	ldr	r2, [pc, #336]	; (8000750 <GPIO_Init+0x310>)
 8000600:	430b      	orrs	r3, r1
 8000602:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 8000604:	2300      	movs	r3, #0
 8000606:	617b      	str	r3, [r7, #20]

	// Config the pin Speed

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	799b      	ldrb	r3, [r3, #6]
 800060c:	461a      	mov	r2, r3
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	791b      	ldrb	r3, [r3, #4]
 8000612:	005b      	lsls	r3, r3, #1
 8000614:	fa02 f303 	lsl.w	r3, r2, r3
 8000618:	617b      	str	r3, [r7, #20]
	// Clearbit trước khi Set
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	689a      	ldr	r2, [r3, #8]
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	791b      	ldrb	r3, [r3, #4]
 8000624:	005b      	lsls	r3, r3, #1
 8000626:	2103      	movs	r1, #3
 8000628:	fa01 f303 	lsl.w	r3, r1, r3
 800062c:	43db      	mvns	r3, r3
 800062e:	4619      	mov	r1, r3
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	400a      	ands	r2, r1
 8000636:	609a      	str	r2, [r3, #8]
	// Setbit
	pGPIOHandle->pGPIOx->OSPEEDR |=  temp;
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	6899      	ldr	r1, [r3, #8]
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	697a      	ldr	r2, [r7, #20]
 8000644:	430a      	orrs	r2, r1
 8000646:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000648:	2300      	movs	r3, #0
 800064a:	617b      	str	r3, [r7, #20]

	// Config the OPType

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	79db      	ldrb	r3, [r3, #7]
 8000650:	461a      	mov	r2, r3
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	791b      	ldrb	r3, [r3, #4]
 8000656:	fa02 f303 	lsl.w	r3, r2, r3
 800065a:	617b      	str	r3, [r7, #20]
	// Clearbit trước khi Set
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	685a      	ldr	r2, [r3, #4]
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	791b      	ldrb	r3, [r3, #4]
 8000666:	4619      	mov	r1, r3
 8000668:	2301      	movs	r3, #1
 800066a:	408b      	lsls	r3, r1
 800066c:	43db      	mvns	r3, r3
 800066e:	4619      	mov	r1, r3
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	400a      	ands	r2, r1
 8000676:	605a      	str	r2, [r3, #4]
	// Setbit
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	681b      	ldr	r3, [r3, #0]
 800067c:	6859      	ldr	r1, [r3, #4]
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	697a      	ldr	r2, [r7, #20]
 8000684:	430a      	orrs	r2, r1
 8000686:	605a      	str	r2, [r3, #4]

	temp =0;
 8000688:	2300      	movs	r3, #0
 800068a:	617b      	str	r3, [r7, #20]

	// Config the PUPD

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPUPD << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	7a1b      	ldrb	r3, [r3, #8]
 8000690:	461a      	mov	r2, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	791b      	ldrb	r3, [r3, #4]
 8000696:	005b      	lsls	r3, r3, #1
 8000698:	fa02 f303 	lsl.w	r3, r2, r3
 800069c:	617b      	str	r3, [r7, #20]
	// Clearbit trước khi Set
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	681b      	ldr	r3, [r3, #0]
 80006a2:	68da      	ldr	r2, [r3, #12]
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	791b      	ldrb	r3, [r3, #4]
 80006a8:	005b      	lsls	r3, r3, #1
 80006aa:	2103      	movs	r1, #3
 80006ac:	fa01 f303 	lsl.w	r3, r1, r3
 80006b0:	43db      	mvns	r3, r3
 80006b2:	4619      	mov	r1, r3
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	400a      	ands	r2, r1
 80006ba:	60da      	str	r2, [r3, #12]
	// Setbit
	pGPIOHandle->pGPIOx->PUPDR |=  temp;
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	68d9      	ldr	r1, [r3, #12]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	697a      	ldr	r2, [r7, #20]
 80006c8:	430a      	orrs	r2, r1
 80006ca:	60da      	str	r2, [r3, #12]

	temp =0;
 80006cc:	2300      	movs	r3, #0
 80006ce:	617b      	str	r3, [r7, #20]

	// Config the Alternate Function
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	795b      	ldrb	r3, [r3, #5]
 80006d4:	2b02      	cmp	r3, #2
 80006d6:	d131      	bne.n	800073c <GPIO_Init+0x2fc>
	{
		// Cấu hình Alternate Function đây
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	791b      	ldrb	r3, [r3, #4]
 80006dc:	08db      	lsrs	r3, r3, #3
 80006de:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8 ;
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	791b      	ldrb	r3, [r3, #4]
 80006e4:	f003 0307 	and.w	r3, r3, #7
 80006e8:	73fb      	strb	r3, [r7, #15]
		// Nếu temp1  = 0 thì thanh ghi LOW
		// Nếu temp1 = 1  thì thanh ghi HIGH
		// Lấy phần dư, mỗi ô cấu hình pin có 4 bit, vậy ta cần ghi value << (4 * temp2)

		// ClearBit trước khi set
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~ (0xF << (4 * temp2));
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	7c3a      	ldrb	r2, [r7, #16]
 80006f0:	3208      	adds	r2, #8
 80006f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006f6:	7bfb      	ldrb	r3, [r7, #15]
 80006f8:	009b      	lsls	r3, r3, #2
 80006fa:	220f      	movs	r2, #15
 80006fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000700:	43db      	mvns	r3, r3
 8000702:	4618      	mov	r0, r3
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	7c3a      	ldrb	r2, [r7, #16]
 800070a:	4001      	ands	r1, r0
 800070c:	3208      	adds	r2, #8
 800070e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		// SET bit
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode << (4 * temp2);
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	7c3a      	ldrb	r2, [r7, #16]
 8000718:	3208      	adds	r2, #8
 800071a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	7a5b      	ldrb	r3, [r3, #9]
 8000722:	461a      	mov	r2, r3
 8000724:	7bfb      	ldrb	r3, [r7, #15]
 8000726:	009b      	lsls	r3, r3, #2
 8000728:	fa02 f303 	lsl.w	r3, r2, r3
 800072c:	4618      	mov	r0, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	7c3a      	ldrb	r2, [r7, #16]
 8000734:	4301      	orrs	r1, r0
 8000736:	3208      	adds	r2, #8
 8000738:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 800073c:	bf00      	nop
 800073e:	371c      	adds	r7, #28
 8000740:	46bd      	mov	sp, r7
 8000742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000746:	4770      	bx	lr
 8000748:	40023800 	.word	0x40023800
 800074c:	40013800 	.word	0x40013800
 8000750:	40013c00 	.word	0x40013c00

08000754 <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR |= Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000754:	b480      	push	{r7}
 8000756:	b083      	sub	sp, #12
 8000758:	af00      	add	r7, sp, #0
 800075a:	6078      	str	r0, [r7, #4]
 800075c:	460b      	mov	r3, r1
 800075e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	695b      	ldr	r3, [r3, #20]
 8000764:	78fa      	ldrb	r2, [r7, #3]
 8000766:	2101      	movs	r1, #1
 8000768:	fa01 f202 	lsl.w	r2, r1, r2
 800076c:	405a      	eors	r2, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	615a      	str	r2, [r3, #20]
}
 8000772:	bf00      	nop
 8000774:	370c      	adds	r7, #12
 8000776:	46bd      	mov	sp, r7
 8000778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800077c:	4770      	bx	lr
	...

08000780 <GPIO_IRQConfigNumber>:

/*
 * GPIO IRQ Handle
 */
void GPIO_IRQConfigNumber(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000780:	b480      	push	{r7}
 8000782:	b083      	sub	sp, #12
 8000784:	af00      	add	r7, sp, #0
 8000786:	4603      	mov	r3, r0
 8000788:	460a      	mov	r2, r1
 800078a:	71fb      	strb	r3, [r7, #7]
 800078c:	4613      	mov	r3, r2
 800078e:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == 1)
 8000790:	79bb      	ldrb	r3, [r7, #6]
 8000792:	2b01      	cmp	r3, #1
 8000794:	d133      	bne.n	80007fe <GPIO_IRQConfigNumber+0x7e>
	{
		if(IRQNumber <32)
 8000796:	79fb      	ldrb	r3, [r7, #7]
 8000798:	2b1f      	cmp	r3, #31
 800079a:	d80a      	bhi.n	80007b2 <GPIO_IRQConfigNumber+0x32>
		{
			*NVIC_ISER0_BASEADDR |= 1 << IRQNumber;
 800079c:	4b35      	ldr	r3, [pc, #212]	; (8000874 <GPIO_IRQConfigNumber+0xf4>)
 800079e:	681b      	ldr	r3, [r3, #0]
 80007a0:	79fa      	ldrb	r2, [r7, #7]
 80007a2:	2101      	movs	r1, #1
 80007a4:	fa01 f202 	lsl.w	r2, r1, r2
 80007a8:	4611      	mov	r1, r2
 80007aa:	4a32      	ldr	r2, [pc, #200]	; (8000874 <GPIO_IRQConfigNumber+0xf4>)
 80007ac:	430b      	orrs	r3, r1
 80007ae:	6013      	str	r3, [r2, #0]
		{
			*NVIC_ICER2_BASEADDR |= 1 << (IRQNumber%64);
		}
	}

}
 80007b0:	e059      	b.n	8000866 <GPIO_IRQConfigNumber+0xe6>
		else if(IRQNumber <64 && IRQNumber>=32)
 80007b2:	79fb      	ldrb	r3, [r7, #7]
 80007b4:	2b3f      	cmp	r3, #63	; 0x3f
 80007b6:	d80f      	bhi.n	80007d8 <GPIO_IRQConfigNumber+0x58>
 80007b8:	79fb      	ldrb	r3, [r7, #7]
 80007ba:	2b1f      	cmp	r3, #31
 80007bc:	d90c      	bls.n	80007d8 <GPIO_IRQConfigNumber+0x58>
			*NVIC_ISER1_BASEADDR |= 1 << (IRQNumber%32);
 80007be:	4b2e      	ldr	r3, [pc, #184]	; (8000878 <GPIO_IRQConfigNumber+0xf8>)
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	79fa      	ldrb	r2, [r7, #7]
 80007c4:	f002 021f 	and.w	r2, r2, #31
 80007c8:	2101      	movs	r1, #1
 80007ca:	fa01 f202 	lsl.w	r2, r1, r2
 80007ce:	4611      	mov	r1, r2
 80007d0:	4a29      	ldr	r2, [pc, #164]	; (8000878 <GPIO_IRQConfigNumber+0xf8>)
 80007d2:	430b      	orrs	r3, r1
 80007d4:	6013      	str	r3, [r2, #0]
 80007d6:	e046      	b.n	8000866 <GPIO_IRQConfigNumber+0xe6>
		else if(IRQNumber < 96 && IRQNumber >=64)
 80007d8:	79fb      	ldrb	r3, [r7, #7]
 80007da:	2b5f      	cmp	r3, #95	; 0x5f
 80007dc:	d843      	bhi.n	8000866 <GPIO_IRQConfigNumber+0xe6>
 80007de:	79fb      	ldrb	r3, [r7, #7]
 80007e0:	2b3f      	cmp	r3, #63	; 0x3f
 80007e2:	d940      	bls.n	8000866 <GPIO_IRQConfigNumber+0xe6>
			*NVIC_ISER2_BASEADDR |= 1 << (IRQNumber%64);
 80007e4:	4b25      	ldr	r3, [pc, #148]	; (800087c <GPIO_IRQConfigNumber+0xfc>)
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	79fa      	ldrb	r2, [r7, #7]
 80007ea:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007ee:	2101      	movs	r1, #1
 80007f0:	fa01 f202 	lsl.w	r2, r1, r2
 80007f4:	4611      	mov	r1, r2
 80007f6:	4a21      	ldr	r2, [pc, #132]	; (800087c <GPIO_IRQConfigNumber+0xfc>)
 80007f8:	430b      	orrs	r3, r1
 80007fa:	6013      	str	r3, [r2, #0]
}
 80007fc:	e033      	b.n	8000866 <GPIO_IRQConfigNumber+0xe6>
		if(IRQNumber <32)
 80007fe:	79fb      	ldrb	r3, [r7, #7]
 8000800:	2b1f      	cmp	r3, #31
 8000802:	d80a      	bhi.n	800081a <GPIO_IRQConfigNumber+0x9a>
			*NVIC_ICER0_BASEADDR |= 1 << IRQNumber;
 8000804:	4b1e      	ldr	r3, [pc, #120]	; (8000880 <GPIO_IRQConfigNumber+0x100>)
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	79fa      	ldrb	r2, [r7, #7]
 800080a:	2101      	movs	r1, #1
 800080c:	fa01 f202 	lsl.w	r2, r1, r2
 8000810:	4611      	mov	r1, r2
 8000812:	4a1b      	ldr	r2, [pc, #108]	; (8000880 <GPIO_IRQConfigNumber+0x100>)
 8000814:	430b      	orrs	r3, r1
 8000816:	6013      	str	r3, [r2, #0]
}
 8000818:	e025      	b.n	8000866 <GPIO_IRQConfigNumber+0xe6>
		else if(IRQNumber <64 && IRQNumber>=32)
 800081a:	79fb      	ldrb	r3, [r7, #7]
 800081c:	2b3f      	cmp	r3, #63	; 0x3f
 800081e:	d80f      	bhi.n	8000840 <GPIO_IRQConfigNumber+0xc0>
 8000820:	79fb      	ldrb	r3, [r7, #7]
 8000822:	2b1f      	cmp	r3, #31
 8000824:	d90c      	bls.n	8000840 <GPIO_IRQConfigNumber+0xc0>
			*NVIC_ICER1_BASEADDR |= 1 << (IRQNumber%32);
 8000826:	4b17      	ldr	r3, [pc, #92]	; (8000884 <GPIO_IRQConfigNumber+0x104>)
 8000828:	681b      	ldr	r3, [r3, #0]
 800082a:	79fa      	ldrb	r2, [r7, #7]
 800082c:	f002 021f 	and.w	r2, r2, #31
 8000830:	2101      	movs	r1, #1
 8000832:	fa01 f202 	lsl.w	r2, r1, r2
 8000836:	4611      	mov	r1, r2
 8000838:	4a12      	ldr	r2, [pc, #72]	; (8000884 <GPIO_IRQConfigNumber+0x104>)
 800083a:	430b      	orrs	r3, r1
 800083c:	6013      	str	r3, [r2, #0]
 800083e:	e012      	b.n	8000866 <GPIO_IRQConfigNumber+0xe6>
		else if(IRQNumber < 96 && IRQNumber >=64)
 8000840:	79fb      	ldrb	r3, [r7, #7]
 8000842:	2b5f      	cmp	r3, #95	; 0x5f
 8000844:	d80f      	bhi.n	8000866 <GPIO_IRQConfigNumber+0xe6>
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	2b3f      	cmp	r3, #63	; 0x3f
 800084a:	d90c      	bls.n	8000866 <GPIO_IRQConfigNumber+0xe6>
			*NVIC_ICER2_BASEADDR |= 1 << (IRQNumber%64);
 800084c:	4b0e      	ldr	r3, [pc, #56]	; (8000888 <GPIO_IRQConfigNumber+0x108>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	79fa      	ldrb	r2, [r7, #7]
 8000852:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000856:	2101      	movs	r1, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4611      	mov	r1, r2
 800085e:	4a0a      	ldr	r2, [pc, #40]	; (8000888 <GPIO_IRQConfigNumber+0x108>)
 8000860:	430b      	orrs	r3, r1
 8000862:	6013      	str	r3, [r2, #0]
}
 8000864:	e7ff      	b.n	8000866 <GPIO_IRQConfigNumber+0xe6>
 8000866:	bf00      	nop
 8000868:	370c      	adds	r7, #12
 800086a:	46bd      	mov	sp, r7
 800086c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000870:	4770      	bx	lr
 8000872:	bf00      	nop
 8000874:	e000e100 	.word	0xe000e100
 8000878:	e000e104 	.word	0xe000e104
 800087c:	e000e108 	.word	0xe000e108
 8000880:	e000e180 	.word	0xe000e180
 8000884:	e000e184 	.word	0xe000e184
 8000888:	e000e188 	.word	0xe000e188

0800088c <GPIO_IRQConfigPriority>:
void GPIO_IRQConfigPriority(uint8_t IRQNumber, uint8_t IRQPriority)
{
 800088c:	b480      	push	{r7}
 800088e:	b085      	sub	sp, #20
 8000890:	af00      	add	r7, sp, #0
 8000892:	4603      	mov	r3, r0
 8000894:	460a      	mov	r2, r1
 8000896:	71fb      	strb	r3, [r7, #7]
 8000898:	4613      	mov	r3, r2
 800089a:	71bb      	strb	r3, [r7, #6]
	uint8_t iprReg = IRQNumber / 4;
 800089c:	79fb      	ldrb	r3, [r7, #7]
 800089e:	089b      	lsrs	r3, r3, #2
 80008a0:	73fb      	strb	r3, [r7, #15]
	uint8_t iprSec = IRQNumber % 4;
 80008a2:	79fb      	ldrb	r3, [r7, #7]
 80008a4:	f003 0303 	and.w	r3, r3, #3
 80008a8:	73bb      	strb	r3, [r7, #14]
	// mỗi thanh ghi 32 bit
	// mỗi giá trị lưu 0-7 8-16 ...=> iprSec * 8
	// NVIC_IPR0_BASEADDR   0xE000E400
	// NVIC_IPR1_BASEADDR   0xE000E404
	// Vì vậy cần iprReg*4
	uint8_t shift_amount = (iprSec * 8) + (8 - NO_PR_BITS_IMPLEMENTED);
 80008aa:	7bbb      	ldrb	r3, [r7, #14]
 80008ac:	00db      	lsls	r3, r3, #3
 80008ae:	b2db      	uxtb	r3, r3
 80008b0:	3304      	adds	r3, #4
 80008b2:	737b      	strb	r3, [r7, #13]

	*(NVIC_IPR_BASEADDR + iprReg) |= IRQPriority << shift_amount ;
 80008b4:	7bfb      	ldrb	r3, [r7, #15]
 80008b6:	009b      	lsls	r3, r3, #2
 80008b8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008bc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008c0:	681a      	ldr	r2, [r3, #0]
 80008c2:	79b9      	ldrb	r1, [r7, #6]
 80008c4:	7b7b      	ldrb	r3, [r7, #13]
 80008c6:	fa01 f303 	lsl.w	r3, r1, r3
 80008ca:	4619      	mov	r1, r3
 80008cc:	7bfb      	ldrb	r3, [r7, #15]
 80008ce:	009b      	lsls	r3, r3, #2
 80008d0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008d4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008d8:	430a      	orrs	r2, r1
 80008da:	601a      	str	r2, [r3, #0]

}
 80008dc:	bf00      	nop
 80008de:	3714      	adds	r7, #20
 80008e0:	46bd      	mov	sp, r7
 80008e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e6:	4770      	bx	lr

080008e8 <GPIO_IRQHandling>:
void GPIO_IRQHandling(uint8_t PinNumber)
{
 80008e8:	b480      	push	{r7}
 80008ea:	b083      	sub	sp, #12
 80008ec:	af00      	add	r7, sp, #0
 80008ee:	4603      	mov	r3, r0
 80008f0:	71fb      	strb	r3, [r7, #7]
	if(EXTI->PR & (1 << PinNumber))
 80008f2:	4b0c      	ldr	r3, [pc, #48]	; (8000924 <GPIO_IRQHandling+0x3c>)
 80008f4:	695b      	ldr	r3, [r3, #20]
 80008f6:	79fa      	ldrb	r2, [r7, #7]
 80008f8:	2101      	movs	r1, #1
 80008fa:	fa01 f202 	lsl.w	r2, r1, r2
 80008fe:	4013      	ands	r3, r2
 8000900:	2b00      	cmp	r3, #0
 8000902:	d009      	beq.n	8000918 <GPIO_IRQHandling+0x30>
	{
		// Clear bit theo RM, clear la ghi 1
		EXTI->PR |= 1 << PinNumber;
 8000904:	4b07      	ldr	r3, [pc, #28]	; (8000924 <GPIO_IRQHandling+0x3c>)
 8000906:	695b      	ldr	r3, [r3, #20]
 8000908:	79fa      	ldrb	r2, [r7, #7]
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	4611      	mov	r1, r2
 8000912:	4a04      	ldr	r2, [pc, #16]	; (8000924 <GPIO_IRQHandling+0x3c>)
 8000914:	430b      	orrs	r3, r1
 8000916:	6153      	str	r3, [r2, #20]
	}
}
 8000918:	bf00      	nop
 800091a:	370c      	adds	r7, #12
 800091c:	46bd      	mov	sp, r7
 800091e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000922:	4770      	bx	lr
 8000924:	40013c00 	.word	0x40013c00

08000928 <__libc_init_array>:
 8000928:	b570      	push	{r4, r5, r6, lr}
 800092a:	4d0d      	ldr	r5, [pc, #52]	; (8000960 <__libc_init_array+0x38>)
 800092c:	4c0d      	ldr	r4, [pc, #52]	; (8000964 <__libc_init_array+0x3c>)
 800092e:	1b64      	subs	r4, r4, r5
 8000930:	10a4      	asrs	r4, r4, #2
 8000932:	2600      	movs	r6, #0
 8000934:	42a6      	cmp	r6, r4
 8000936:	d109      	bne.n	800094c <__libc_init_array+0x24>
 8000938:	4d0b      	ldr	r5, [pc, #44]	; (8000968 <__libc_init_array+0x40>)
 800093a:	4c0c      	ldr	r4, [pc, #48]	; (800096c <__libc_init_array+0x44>)
 800093c:	f000 f820 	bl	8000980 <_init>
 8000940:	1b64      	subs	r4, r4, r5
 8000942:	10a4      	asrs	r4, r4, #2
 8000944:	2600      	movs	r6, #0
 8000946:	42a6      	cmp	r6, r4
 8000948:	d105      	bne.n	8000956 <__libc_init_array+0x2e>
 800094a:	bd70      	pop	{r4, r5, r6, pc}
 800094c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000950:	4798      	blx	r3
 8000952:	3601      	adds	r6, #1
 8000954:	e7ee      	b.n	8000934 <__libc_init_array+0xc>
 8000956:	f855 3b04 	ldr.w	r3, [r5], #4
 800095a:	4798      	blx	r3
 800095c:	3601      	adds	r6, #1
 800095e:	e7f2      	b.n	8000946 <__libc_init_array+0x1e>
 8000960:	08000998 	.word	0x08000998
 8000964:	08000998 	.word	0x08000998
 8000968:	08000998 	.word	0x08000998
 800096c:	0800099c 	.word	0x0800099c

08000970 <memset>:
 8000970:	4402      	add	r2, r0
 8000972:	4603      	mov	r3, r0
 8000974:	4293      	cmp	r3, r2
 8000976:	d100      	bne.n	800097a <memset+0xa>
 8000978:	4770      	bx	lr
 800097a:	f803 1b01 	strb.w	r1, [r3], #1
 800097e:	e7f9      	b.n	8000974 <memset+0x4>

08000980 <_init>:
 8000980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000982:	bf00      	nop
 8000984:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000986:	bc08      	pop	{r3}
 8000988:	469e      	mov	lr, r3
 800098a:	4770      	bx	lr

0800098c <_fini>:
 800098c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800098e:	bf00      	nop
 8000990:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000992:	bc08      	pop	{r3}
 8000994:	469e      	mov	lr, r3
 8000996:	4770      	bx	lr
