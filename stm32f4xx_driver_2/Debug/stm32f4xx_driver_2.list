
stm32f4xx_driver_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000618  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007b0  080007b8  000107b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007b0  080007b0  000107b8  2**0
                  CONTENTS
  4 .ARM          00000000  080007b0  080007b0  000107b8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007b0  080007b8  000107b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007b0  080007b0  000107b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007b4  080007b4  000107b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007b8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007b8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000107b8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009b1  00000000  00000000  000107e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000024c  00000000  00000000  00011199  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  000113e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  000114a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000140c  00000000  00000000  00011540  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000cc5  00000000  00000000  0001294c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005521  00000000  00000000  00013611  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00018b32  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  00018b84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000798 	.word	0x08000798

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000798 	.word	0x08000798

080001d8 <delay>:
#include "stm32f411xx.h"

#define BUTTON_PRESSED 		1

void delay()
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	for(uint32_t i=0 ; i < 50000/2 ;i++);
 80001de:	2300      	movs	r3, #0
 80001e0:	607b      	str	r3, [r7, #4]
 80001e2:	e002      	b.n	80001ea <delay+0x12>
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	3301      	adds	r3, #1
 80001e8:	607b      	str	r3, [r7, #4]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	f246 12a7 	movw	r2, #24999	; 0x61a7
 80001f0:	4293      	cmp	r3, r2
 80001f2:	d9f7      	bls.n	80001e4 <delay+0xc>
}
 80001f4:	bf00      	nop
 80001f6:	bf00      	nop
 80001f8:	370c      	adds	r7, #12
 80001fa:	46bd      	mov	sp, r7
 80001fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000200:	4770      	bx	lr
	...

08000204 <main>:

int main()
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t LED1;
	LED1.pGPIOx = GPIOD;
 800020a:	4b1a      	ldr	r3, [pc, #104]	; (8000274 <main+0x70>)
 800020c:	60fb      	str	r3, [r7, #12]
	LED1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_14;
 800020e:	230e      	movs	r3, #14
 8000210:	743b      	strb	r3, [r7, #16]
	LED1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000212:	2301      	movs	r3, #1
 8000214:	747b      	strb	r3, [r7, #17]
	LED1.GPIO_PinConfig.GPIO_PinOPType =  GPIO_OPT_PP;
 8000216:	2300      	movs	r3, #0
 8000218:	74fb      	strb	r3, [r7, #19]
	LED1.GPIO_PinConfig.GPIO_PinPUPD = GPIO_PU;
 800021a:	2301      	movs	r3, #1
 800021c:	753b      	strb	r3, [r7, #20]
	LED1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OUT_SPEED_FAST;
 800021e:	2302      	movs	r3, #2
 8000220:	74bb      	strb	r3, [r7, #18]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4813      	ldr	r0, [pc, #76]	; (8000274 <main+0x70>)
 8000226:	f000 f853 	bl	80002d0 <GPIO_PeriClockControl>
	GPIO_Init(&LED1);
 800022a:	f107 030c 	add.w	r3, r7, #12
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f8f6 	bl	8000420 <GPIO_Init>

	GPIO_Handle_t Button;
	Button.GPIO_PinConfig.GPIO_PinMode =  GPIO_MODE_IN;
 8000234:	2300      	movs	r3, #0
 8000236:	717b      	strb	r3, [r7, #5]
	Button.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OUT_SPEED_FAST;
 8000238:	2302      	movs	r3, #2
 800023a:	71bb      	strb	r3, [r7, #6]
	Button.GPIO_PinConfig.GPIO_PinPUPD = GPIO_NO_PUPD;
 800023c:	2300      	movs	r3, #0
 800023e:	723b      	strb	r3, [r7, #8]
	Button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 8000240:	2300      	movs	r3, #0
 8000242:	713b      	strb	r3, [r7, #4]
	Button.pGPIOx = GPIOA;
 8000244:	4b0c      	ldr	r3, [pc, #48]	; (8000278 <main+0x74>)
 8000246:	603b      	str	r3, [r7, #0]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000248:	2101      	movs	r1, #1
 800024a:	480b      	ldr	r0, [pc, #44]	; (8000278 <main+0x74>)
 800024c:	f000 f840 	bl	80002d0 <GPIO_PeriClockControl>
	GPIO_Init(&Button);
 8000250:	463b      	mov	r3, r7
 8000252:	4618      	mov	r0, r3
 8000254:	f000 f8e4 	bl	8000420 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0) == BUTTON_PRESSED)
 8000258:	2100      	movs	r1, #0
 800025a:	4807      	ldr	r0, [pc, #28]	; (8000278 <main+0x74>)
 800025c:	f000 fa4c 	bl	80006f8 <GPIO_ReadFromInputPin>
 8000260:	4603      	mov	r3, r0
 8000262:	2b01      	cmp	r3, #1
 8000264:	d1f8      	bne.n	8000258 <main+0x54>
		{
			delay();
 8000266:	f7ff ffb7 	bl	80001d8 <delay>
			GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_14);
 800026a:	210e      	movs	r1, #14
 800026c:	4801      	ldr	r0, [pc, #4]	; (8000274 <main+0x70>)
 800026e:	f000 fa59 	bl	8000724 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0) == BUTTON_PRESSED)
 8000272:	e7f1      	b.n	8000258 <main+0x54>
 8000274:	40020c00 	.word	0x40020c00
 8000278:	40020000 	.word	0x40020000

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	; (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	; (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	; (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	; (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	; (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	; (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 fa51 	bl	8000750 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ffa9 	bl	8000204 <main>

080002b2 <LoopForever>:

LoopForever:
    b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	080007b8 	.word	0x080007b8
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>
	...

080002d0 <GPIO_PeriClockControl>:
 *  @return				-  none
 *
 *  @note				-  none
 */
void GPIO_PeriClockControl(	GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	460b      	mov	r3, r1
 80002da:	70fb      	strb	r3, [r7, #3]
	switch(EnorDi)
 80002dc:	78fb      	ldrb	r3, [r7, #3]
 80002de:	2b00      	cmp	r3, #0
 80002e0:	d044      	beq.n	800036c <GPIO_PeriClockControl+0x9c>
 80002e2:	2b01      	cmp	r3, #1
 80002e4:	f040 8087 	bne.w	80003f6 <GPIO_PeriClockControl+0x126>
	{
		case ENABLE:
			if(pGPIOx == GPIOA)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a46      	ldr	r2, [pc, #280]	; (8000404 <GPIO_PeriClockControl+0x134>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x2e>
				GPIOA_PCLK_EN();
 80002f0:	4b45      	ldr	r3, [pc, #276]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a44      	ldr	r2, [pc, #272]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80002f6:	f043 0301 	orr.w	r3, r3, #1
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
				GPIOD_PCLK_EN();
			else if (pGPIOx == GPIOE)
				GPIOE_PCLK_EN();
			else if (pGPIOx == GPIOH)
				GPIOH_PCLK_EN();
			break;
 80002fc:	e078      	b.n	80003f0 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOB)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a42      	ldr	r2, [pc, #264]	; (800040c <GPIO_PeriClockControl+0x13c>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x44>
				GPIOB_PCLK_EN();
 8000306:	4b40      	ldr	r3, [pc, #256]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a3f      	ldr	r2, [pc, #252]	; (8000408 <GPIO_PeriClockControl+0x138>)
 800030c:	f043 0302 	orr.w	r3, r3, #2
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000312:	e06d      	b.n	80003f0 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOC)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a3e      	ldr	r2, [pc, #248]	; (8000410 <GPIO_PeriClockControl+0x140>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x5a>
				GPIOC_PCLK_EN();
 800031c:	4b3a      	ldr	r3, [pc, #232]	; (8000408 <GPIO_PeriClockControl+0x138>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a39      	ldr	r2, [pc, #228]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000322:	f043 0304 	orr.w	r3, r3, #4
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000328:	e062      	b.n	80003f0 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOD)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a39      	ldr	r2, [pc, #228]	; (8000414 <GPIO_PeriClockControl+0x144>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x70>
				GPIOD_PCLK_EN();
 8000332:	4b35      	ldr	r3, [pc, #212]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a34      	ldr	r2, [pc, #208]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000338:	f043 0308 	orr.w	r3, r3, #8
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 800033e:	e057      	b.n	80003f0 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOE)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a35      	ldr	r2, [pc, #212]	; (8000418 <GPIO_PeriClockControl+0x148>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x86>
				GPIOE_PCLK_EN();
 8000348:	4b2f      	ldr	r3, [pc, #188]	; (8000408 <GPIO_PeriClockControl+0x138>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a2e      	ldr	r2, [pc, #184]	; (8000408 <GPIO_PeriClockControl+0x138>)
 800034e:	f043 0310 	orr.w	r3, r3, #16
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000354:	e04c      	b.n	80003f0 <GPIO_PeriClockControl+0x120>
			else if (pGPIOx == GPIOH)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a30      	ldr	r2, [pc, #192]	; (800041c <GPIO_PeriClockControl+0x14c>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d148      	bne.n	80003f0 <GPIO_PeriClockControl+0x120>
				GPIOH_PCLK_EN();
 800035e:	4b2a      	ldr	r3, [pc, #168]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a29      	ldr	r2, [pc, #164]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000364:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 800036a:	e041      	b.n	80003f0 <GPIO_PeriClockControl+0x120>
		case DISABLE:
			if(pGPIOx == GPIOA)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a25      	ldr	r2, [pc, #148]	; (8000404 <GPIO_PeriClockControl+0x134>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xb2>
				GPIOA_PCLK_DI();
 8000374:	4b24      	ldr	r3, [pc, #144]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a23      	ldr	r2, [pc, #140]	; (8000408 <GPIO_PeriClockControl+0x138>)
 800037a:	f023 0301 	bic.w	r3, r3, #1
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
				GPIOD_PCLK_DI();
			else if (pGPIOx == GPIOE)
				GPIOE_PCLK_DI();
			else if (pGPIOx == GPIOH)
				GPIOH_PCLK_DI();
			break;
 8000380:	e038      	b.n	80003f4 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOB)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a21      	ldr	r2, [pc, #132]	; (800040c <GPIO_PeriClockControl+0x13c>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0xc8>
				GPIOB_PCLK_DI();
 800038a:	4b1f      	ldr	r3, [pc, #124]	; (8000408 <GPIO_PeriClockControl+0x138>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a1e      	ldr	r2, [pc, #120]	; (8000408 <GPIO_PeriClockControl+0x138>)
 8000390:	f023 0302 	bic.w	r3, r3, #2
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 8000396:	e02d      	b.n	80003f4 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOC)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a1d      	ldr	r2, [pc, #116]	; (8000410 <GPIO_PeriClockControl+0x140>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xde>
				GPIOC_PCLK_DI();
 80003a0:	4b19      	ldr	r3, [pc, #100]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a18      	ldr	r2, [pc, #96]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003a6:	f023 0304 	bic.w	r3, r3, #4
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003ac:	e022      	b.n	80003f4 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOD)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a18      	ldr	r2, [pc, #96]	; (8000414 <GPIO_PeriClockControl+0x144>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0xf4>
				GPIOD_PCLK_DI();
 80003b6:	4b14      	ldr	r3, [pc, #80]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a13      	ldr	r2, [pc, #76]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003bc:	f023 0308 	bic.w	r3, r3, #8
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003c2:	e017      	b.n	80003f4 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOE)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a14      	ldr	r2, [pc, #80]	; (8000418 <GPIO_PeriClockControl+0x148>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x10a>
				GPIOE_PCLK_DI();
 80003cc:	4b0e      	ldr	r3, [pc, #56]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a0d      	ldr	r2, [pc, #52]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003d2:	f023 0310 	bic.w	r3, r3, #16
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003d8:	e00c      	b.n	80003f4 <GPIO_PeriClockControl+0x124>
			else if (pGPIOx == GPIOH)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a0f      	ldr	r2, [pc, #60]	; (800041c <GPIO_PeriClockControl+0x14c>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d108      	bne.n	80003f4 <GPIO_PeriClockControl+0x124>
				GPIOH_PCLK_DI();
 80003e2:	4b09      	ldr	r3, [pc, #36]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a08      	ldr	r2, [pc, #32]	; (8000408 <GPIO_PeriClockControl+0x138>)
 80003e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
			break;
 80003ee:	e001      	b.n	80003f4 <GPIO_PeriClockControl+0x124>
			break;
 80003f0:	bf00      	nop
 80003f2:	e000      	b.n	80003f6 <GPIO_PeriClockControl+0x126>
			break;
 80003f4:	bf00      	nop
	}

}
 80003f6:	bf00      	nop
 80003f8:	370c      	adds	r7, #12
 80003fa:	46bd      	mov	sp, r7
 80003fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000400:	4770      	bx	lr
 8000402:	bf00      	nop
 8000404:	40020000 	.word	0x40020000
 8000408:	40023800 	.word	0x40023800
 800040c:	40020400 	.word	0x40020400
 8000410:	40020800 	.word	0x40020800
 8000414:	40020c00 	.word	0x40020c00
 8000418:	40021000 	.word	0x40021000
 800041c:	40021c00 	.word	0x40021c00

08000420 <GPIO_Init>:
/*
 * GPIO Init and DeInit Pin
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000420:	b480      	push	{r7}
 8000422:	b087      	sub	sp, #28
 8000424:	af00      	add	r7, sp, #0
 8000426:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000428:	2300      	movs	r3, #0
 800042a:	617b      	str	r3, [r7, #20]
	/*
	 * Config the pinMode
	 *   + Chia ra Nomal Mode
	 *   + Interrupt Mode
	 */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	795b      	ldrb	r3, [r3, #5]
 8000430:	2b03      	cmp	r3, #3
 8000432:	d820      	bhi.n	8000476 <GPIO_Init+0x56>
	{
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	795b      	ldrb	r3, [r3, #5]
 8000438:	461a      	mov	r2, r3
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	791b      	ldrb	r3, [r3, #4]
 800043e:	005b      	lsls	r3, r3, #1
 8000440:	fa02 f303 	lsl.w	r3, r2, r3
 8000444:	617b      	str	r3, [r7, #20]
		// Clearbit trước khi Set
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	681a      	ldr	r2, [r3, #0]
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	791b      	ldrb	r3, [r3, #4]
 8000450:	005b      	lsls	r3, r3, #1
 8000452:	2103      	movs	r1, #3
 8000454:	fa01 f303 	lsl.w	r3, r1, r3
 8000458:	43db      	mvns	r3, r3
 800045a:	4619      	mov	r1, r3
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	400a      	ands	r2, r1
 8000462:	601a      	str	r2, [r3, #0]
		// Setbit
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	6819      	ldr	r1, [r3, #0]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	697a      	ldr	r2, [r7, #20]
 8000470:	430a      	orrs	r2, r1
 8000472:	601a      	str	r2, [r3, #0]
 8000474:	e08d      	b.n	8000592 <GPIO_Init+0x172>
	}
	else
	{
		//1. Cấu hình RT, FT trong EXTI
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_FT)
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	795b      	ldrb	r3, [r3, #5]
 800047a:	2b05      	cmp	r3, #5
 800047c:	d111      	bne.n	80004a2 <GPIO_Init+0x82>
		{
			EXTI->FTSR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047e:	4b96      	ldr	r3, [pc, #600]	; (80006d8 <GPIO_Init+0x2b8>)
 8000480:	68db      	ldr	r3, [r3, #12]
 8000482:	687a      	ldr	r2, [r7, #4]
 8000484:	7912      	ldrb	r2, [r2, #4]
 8000486:	4611      	mov	r1, r2
 8000488:	4a93      	ldr	r2, [pc, #588]	; (80006d8 <GPIO_Init+0x2b8>)
 800048a:	430b      	orrs	r3, r1
 800048c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048e:	4b92      	ldr	r3, [pc, #584]	; (80006d8 <GPIO_Init+0x2b8>)
 8000490:	689b      	ldr	r3, [r3, #8]
 8000492:	687a      	ldr	r2, [r7, #4]
 8000494:	7912      	ldrb	r2, [r2, #4]
 8000496:	43d2      	mvns	r2, r2
 8000498:	4611      	mov	r1, r2
 800049a:	4a8f      	ldr	r2, [pc, #572]	; (80006d8 <GPIO_Init+0x2b8>)
 800049c:	400b      	ands	r3, r1
 800049e:	6093      	str	r3, [r2, #8]
 80004a0:	e029      	b.n	80004f6 <GPIO_Init+0xd6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_RT)
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	795b      	ldrb	r3, [r3, #5]
 80004a6:	2b04      	cmp	r3, #4
 80004a8:	d111      	bne.n	80004ce <GPIO_Init+0xae>
		{
			EXTI->FTSR &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004aa:	4b8b      	ldr	r3, [pc, #556]	; (80006d8 <GPIO_Init+0x2b8>)
 80004ac:	68db      	ldr	r3, [r3, #12]
 80004ae:	687a      	ldr	r2, [r7, #4]
 80004b0:	7912      	ldrb	r2, [r2, #4]
 80004b2:	43d2      	mvns	r2, r2
 80004b4:	4611      	mov	r1, r2
 80004b6:	4a88      	ldr	r2, [pc, #544]	; (80006d8 <GPIO_Init+0x2b8>)
 80004b8:	400b      	ands	r3, r1
 80004ba:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004bc:	4b86      	ldr	r3, [pc, #536]	; (80006d8 <GPIO_Init+0x2b8>)
 80004be:	689b      	ldr	r3, [r3, #8]
 80004c0:	687a      	ldr	r2, [r7, #4]
 80004c2:	7912      	ldrb	r2, [r2, #4]
 80004c4:	4611      	mov	r1, r2
 80004c6:	4a84      	ldr	r2, [pc, #528]	; (80006d8 <GPIO_Init+0x2b8>)
 80004c8:	430b      	orrs	r3, r1
 80004ca:	6093      	str	r3, [r2, #8]
 80004cc:	e013      	b.n	80004f6 <GPIO_Init+0xd6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_RFT)
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	795b      	ldrb	r3, [r3, #5]
 80004d2:	2b06      	cmp	r3, #6
 80004d4:	d10f      	bne.n	80004f6 <GPIO_Init+0xd6>
		{
			EXTI->FTSR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d6:	4b80      	ldr	r3, [pc, #512]	; (80006d8 <GPIO_Init+0x2b8>)
 80004d8:	68db      	ldr	r3, [r3, #12]
 80004da:	687a      	ldr	r2, [r7, #4]
 80004dc:	7912      	ldrb	r2, [r2, #4]
 80004de:	4611      	mov	r1, r2
 80004e0:	4a7d      	ldr	r2, [pc, #500]	; (80006d8 <GPIO_Init+0x2b8>)
 80004e2:	430b      	orrs	r3, r1
 80004e4:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e6:	4b7c      	ldr	r3, [pc, #496]	; (80006d8 <GPIO_Init+0x2b8>)
 80004e8:	689b      	ldr	r3, [r3, #8]
 80004ea:	687a      	ldr	r2, [r7, #4]
 80004ec:	7912      	ldrb	r2, [r2, #4]
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a79      	ldr	r2, [pc, #484]	; (80006d8 <GPIO_Init+0x2b8>)
 80004f2:	430b      	orrs	r3, r1
 80004f4:	6093      	str	r3, [r2, #8]
		}

		//2. Cấu hình port tương ứng đã chọn trong SYSCFG_EXTICR, mặc định là portA
		// đầu tiên phải xem Pin đó ứng với EXTICR nào, sau đó xem nó vào ô nào trong EXTICR đó

		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	791b      	ldrb	r3, [r3, #4]
 80004fa:	089b      	lsrs	r3, r3, #2
 80004fc:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	f003 0303 	and.w	r3, r3, #3
 8000506:	74bb      	strb	r3, [r7, #18]
		uint8_t portCode = GPIO_PORTCODE(pGPIOHandle->pGPIOx);
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a73      	ldr	r2, [pc, #460]	; (80006dc <GPIO_Init+0x2bc>)
 800050e:	4293      	cmp	r3, r2
 8000510:	d024      	beq.n	800055c <GPIO_Init+0x13c>
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	4a72      	ldr	r2, [pc, #456]	; (80006e0 <GPIO_Init+0x2c0>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d01d      	beq.n	8000558 <GPIO_Init+0x138>
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4a70      	ldr	r2, [pc, #448]	; (80006e4 <GPIO_Init+0x2c4>)
 8000522:	4293      	cmp	r3, r2
 8000524:	d016      	beq.n	8000554 <GPIO_Init+0x134>
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a6f      	ldr	r2, [pc, #444]	; (80006e8 <GPIO_Init+0x2c8>)
 800052c:	4293      	cmp	r3, r2
 800052e:	d00f      	beq.n	8000550 <GPIO_Init+0x130>
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a6d      	ldr	r2, [pc, #436]	; (80006ec <GPIO_Init+0x2cc>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d008      	beq.n	800054c <GPIO_Init+0x12c>
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	4a6c      	ldr	r2, [pc, #432]	; (80006f0 <GPIO_Init+0x2d0>)
 8000540:	4293      	cmp	r3, r2
 8000542:	d101      	bne.n	8000548 <GPIO_Init+0x128>
 8000544:	2307      	movs	r3, #7
 8000546:	e00a      	b.n	800055e <GPIO_Init+0x13e>
 8000548:	2300      	movs	r3, #0
 800054a:	e008      	b.n	800055e <GPIO_Init+0x13e>
 800054c:	2304      	movs	r3, #4
 800054e:	e006      	b.n	800055e <GPIO_Init+0x13e>
 8000550:	2303      	movs	r3, #3
 8000552:	e004      	b.n	800055e <GPIO_Init+0x13e>
 8000554:	2302      	movs	r3, #2
 8000556:	e002      	b.n	800055e <GPIO_Init+0x13e>
 8000558:	2301      	movs	r3, #1
 800055a:	e000      	b.n	800055e <GPIO_Init+0x13e>
 800055c:	2300      	movs	r3, #0
 800055e:	747b      	strb	r3, [r7, #17]
		SYSCFG->EXTICR[temp1] |= portCode << (4 * temp2);
 8000560:	4a64      	ldr	r2, [pc, #400]	; (80006f4 <GPIO_Init+0x2d4>)
 8000562:	7cfb      	ldrb	r3, [r7, #19]
 8000564:	3302      	adds	r3, #2
 8000566:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800056a:	7c79      	ldrb	r1, [r7, #17]
 800056c:	7cbb      	ldrb	r3, [r7, #18]
 800056e:	009b      	lsls	r3, r3, #2
 8000570:	fa01 f303 	lsl.w	r3, r1, r3
 8000574:	4618      	mov	r0, r3
 8000576:	495f      	ldr	r1, [pc, #380]	; (80006f4 <GPIO_Init+0x2d4>)
 8000578:	7cfb      	ldrb	r3, [r7, #19]
 800057a:	4302      	orrs	r2, r0
 800057c:	3302      	adds	r3, #2
 800057e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3. Enable interrupt trong thanh ghi Interrupt mask register (EXTI_IMR)
		EXTI->IMR |= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000582:	4b55      	ldr	r3, [pc, #340]	; (80006d8 <GPIO_Init+0x2b8>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	687a      	ldr	r2, [r7, #4]
 8000588:	7912      	ldrb	r2, [r2, #4]
 800058a:	4611      	mov	r1, r2
 800058c:	4a52      	ldr	r2, [pc, #328]	; (80006d8 <GPIO_Init+0x2b8>)
 800058e:	430b      	orrs	r3, r1
 8000590:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 8000592:	2300      	movs	r3, #0
 8000594:	617b      	str	r3, [r7, #20]

	// Config the pin Speed

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	799b      	ldrb	r3, [r3, #6]
 800059a:	461a      	mov	r2, r3
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	005b      	lsls	r3, r3, #1
 80005a2:	fa02 f303 	lsl.w	r3, r2, r3
 80005a6:	617b      	str	r3, [r7, #20]
	// Clearbit trước khi Set
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	689a      	ldr	r2, [r3, #8]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	005b      	lsls	r3, r3, #1
 80005b4:	2103      	movs	r1, #3
 80005b6:	fa01 f303 	lsl.w	r3, r1, r3
 80005ba:	43db      	mvns	r3, r3
 80005bc:	4619      	mov	r1, r3
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	400a      	ands	r2, r1
 80005c4:	609a      	str	r2, [r3, #8]
	// Setbit
	pGPIOHandle->pGPIOx->OSPEEDR |=  temp;
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	6899      	ldr	r1, [r3, #8]
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	697a      	ldr	r2, [r7, #20]
 80005d2:	430a      	orrs	r2, r1
 80005d4:	609a      	str	r2, [r3, #8]

	temp = 0;
 80005d6:	2300      	movs	r3, #0
 80005d8:	617b      	str	r3, [r7, #20]

	// Config the OPType

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	79db      	ldrb	r3, [r3, #7]
 80005de:	461a      	mov	r2, r3
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	791b      	ldrb	r3, [r3, #4]
 80005e4:	fa02 f303 	lsl.w	r3, r2, r3
 80005e8:	617b      	str	r3, [r7, #20]
	// Clearbit trước khi Set
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	685a      	ldr	r2, [r3, #4]
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	791b      	ldrb	r3, [r3, #4]
 80005f4:	4619      	mov	r1, r3
 80005f6:	2301      	movs	r3, #1
 80005f8:	408b      	lsls	r3, r1
 80005fa:	43db      	mvns	r3, r3
 80005fc:	4619      	mov	r1, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	400a      	ands	r2, r1
 8000604:	605a      	str	r2, [r3, #4]
	// Setbit
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	6859      	ldr	r1, [r3, #4]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	697a      	ldr	r2, [r7, #20]
 8000612:	430a      	orrs	r2, r1
 8000614:	605a      	str	r2, [r3, #4]

	temp =0;
 8000616:	2300      	movs	r3, #0
 8000618:	617b      	str	r3, [r7, #20]

	// Config the PUPD

	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPUPD << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	7a1b      	ldrb	r3, [r3, #8]
 800061e:	461a      	mov	r2, r3
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	791b      	ldrb	r3, [r3, #4]
 8000624:	005b      	lsls	r3, r3, #1
 8000626:	fa02 f303 	lsl.w	r3, r2, r3
 800062a:	617b      	str	r3, [r7, #20]
	// Clearbit trước khi Set
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	68da      	ldr	r2, [r3, #12]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	791b      	ldrb	r3, [r3, #4]
 8000636:	005b      	lsls	r3, r3, #1
 8000638:	2103      	movs	r1, #3
 800063a:	fa01 f303 	lsl.w	r3, r1, r3
 800063e:	43db      	mvns	r3, r3
 8000640:	4619      	mov	r1, r3
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	400a      	ands	r2, r1
 8000648:	60da      	str	r2, [r3, #12]
	// Setbit
	pGPIOHandle->pGPIOx->PUPDR |=  temp;
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	68d9      	ldr	r1, [r3, #12]
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	697a      	ldr	r2, [r7, #20]
 8000656:	430a      	orrs	r2, r1
 8000658:	60da      	str	r2, [r3, #12]

	temp =0;
 800065a:	2300      	movs	r3, #0
 800065c:	617b      	str	r3, [r7, #20]

	// Config the Alternate Function
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	795b      	ldrb	r3, [r3, #5]
 8000662:	2b02      	cmp	r3, #2
 8000664:	d131      	bne.n	80006ca <GPIO_Init+0x2aa>
	{
		// Cấu hình Alternate Function đây
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	791b      	ldrb	r3, [r3, #4]
 800066a:	08db      	lsrs	r3, r3, #3
 800066c:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8 ;
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	791b      	ldrb	r3, [r3, #4]
 8000672:	f003 0307 	and.w	r3, r3, #7
 8000676:	73fb      	strb	r3, [r7, #15]
		// Nếu temp1  = 0 thì thanh ghi LOW
		// Nếu temp1 = 1  thì thanh ghi HIGH
		// Lấy phần dư, mỗi ô cấu hình pin có 4 bit, vậy ta cần ghi value << (4 * temp2)

		// ClearBit trước khi set
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~ (0xF << (4 * temp2));
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	681b      	ldr	r3, [r3, #0]
 800067c:	7c3a      	ldrb	r2, [r7, #16]
 800067e:	3208      	adds	r2, #8
 8000680:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000684:	7bfb      	ldrb	r3, [r7, #15]
 8000686:	009b      	lsls	r3, r3, #2
 8000688:	220f      	movs	r2, #15
 800068a:	fa02 f303 	lsl.w	r3, r2, r3
 800068e:	43db      	mvns	r3, r3
 8000690:	4618      	mov	r0, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	7c3a      	ldrb	r2, [r7, #16]
 8000698:	4001      	ands	r1, r0
 800069a:	3208      	adds	r2, #8
 800069c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		// SET bit
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode << (4 * temp2);
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	7c3a      	ldrb	r2, [r7, #16]
 80006a6:	3208      	adds	r2, #8
 80006a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	7a5b      	ldrb	r3, [r3, #9]
 80006b0:	461a      	mov	r2, r3
 80006b2:	7bfb      	ldrb	r3, [r7, #15]
 80006b4:	009b      	lsls	r3, r3, #2
 80006b6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ba:	4618      	mov	r0, r3
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	7c3a      	ldrb	r2, [r7, #16]
 80006c2:	4301      	orrs	r1, r0
 80006c4:	3208      	adds	r2, #8
 80006c6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 80006ca:	bf00      	nop
 80006cc:	371c      	adds	r7, #28
 80006ce:	46bd      	mov	sp, r7
 80006d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d4:	4770      	bx	lr
 80006d6:	bf00      	nop
 80006d8:	40013c00 	.word	0x40013c00
 80006dc:	40020000 	.word	0x40020000
 80006e0:	40020400 	.word	0x40020400
 80006e4:	40020800 	.word	0x40020800
 80006e8:	40020c00 	.word	0x40020c00
 80006ec:	40021000 	.word	0x40021000
 80006f0:	40021c00 	.word	0x40021c00
 80006f4:	40013800 	.word	0x40013800

080006f8 <GPIO_ReadFromInputPin>:

/*
 * GPIO Read and Write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006f8:	b480      	push	{r7}
 80006fa:	b085      	sub	sp, #20
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
 8000700:	460b      	mov	r3, r1
 8000702:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) (pGPIOx->IDR >> PinNumber) & 0x01;
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	691a      	ldr	r2, [r3, #16]
 8000708:	78fb      	ldrb	r3, [r7, #3]
 800070a:	fa22 f303 	lsr.w	r3, r2, r3
 800070e:	b2db      	uxtb	r3, r3
 8000710:	f003 0301 	and.w	r3, r3, #1
 8000714:	73fb      	strb	r3, [r7, #15]
	return value;
 8000716:	7bfb      	ldrb	r3, [r7, #15]
}
 8000718:	4618      	mov	r0, r3
 800071a:	3714      	adds	r7, #20
 800071c:	46bd      	mov	sp, r7
 800071e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000722:	4770      	bx	lr

08000724 <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR |= Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000724:	b480      	push	{r7}
 8000726:	b083      	sub	sp, #12
 8000728:	af00      	add	r7, sp, #0
 800072a:	6078      	str	r0, [r7, #4]
 800072c:	460b      	mov	r3, r1
 800072e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	695b      	ldr	r3, [r3, #20]
 8000734:	78fa      	ldrb	r2, [r7, #3]
 8000736:	2101      	movs	r1, #1
 8000738:	fa01 f202 	lsl.w	r2, r1, r2
 800073c:	405a      	eors	r2, r3
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	615a      	str	r2, [r3, #20]
}
 8000742:	bf00      	nop
 8000744:	370c      	adds	r7, #12
 8000746:	46bd      	mov	sp, r7
 8000748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800074c:	4770      	bx	lr
	...

08000750 <__libc_init_array>:
 8000750:	b570      	push	{r4, r5, r6, lr}
 8000752:	4d0d      	ldr	r5, [pc, #52]	; (8000788 <__libc_init_array+0x38>)
 8000754:	4c0d      	ldr	r4, [pc, #52]	; (800078c <__libc_init_array+0x3c>)
 8000756:	1b64      	subs	r4, r4, r5
 8000758:	10a4      	asrs	r4, r4, #2
 800075a:	2600      	movs	r6, #0
 800075c:	42a6      	cmp	r6, r4
 800075e:	d109      	bne.n	8000774 <__libc_init_array+0x24>
 8000760:	4d0b      	ldr	r5, [pc, #44]	; (8000790 <__libc_init_array+0x40>)
 8000762:	4c0c      	ldr	r4, [pc, #48]	; (8000794 <__libc_init_array+0x44>)
 8000764:	f000 f818 	bl	8000798 <_init>
 8000768:	1b64      	subs	r4, r4, r5
 800076a:	10a4      	asrs	r4, r4, #2
 800076c:	2600      	movs	r6, #0
 800076e:	42a6      	cmp	r6, r4
 8000770:	d105      	bne.n	800077e <__libc_init_array+0x2e>
 8000772:	bd70      	pop	{r4, r5, r6, pc}
 8000774:	f855 3b04 	ldr.w	r3, [r5], #4
 8000778:	4798      	blx	r3
 800077a:	3601      	adds	r6, #1
 800077c:	e7ee      	b.n	800075c <__libc_init_array+0xc>
 800077e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000782:	4798      	blx	r3
 8000784:	3601      	adds	r6, #1
 8000786:	e7f2      	b.n	800076e <__libc_init_array+0x1e>
 8000788:	080007b0 	.word	0x080007b0
 800078c:	080007b0 	.word	0x080007b0
 8000790:	080007b0 	.word	0x080007b0
 8000794:	080007b4 	.word	0x080007b4

08000798 <_init>:
 8000798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800079a:	bf00      	nop
 800079c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800079e:	bc08      	pop	{r3}
 80007a0:	469e      	mov	lr, r3
 80007a2:	4770      	bx	lr

080007a4 <_fini>:
 80007a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007a6:	bf00      	nop
 80007a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007aa:	bc08      	pop	{r3}
 80007ac:	469e      	mov	lr, r3
 80007ae:	4770      	bx	lr
